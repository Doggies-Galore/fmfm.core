run:
  summary: 'Run program'
  command: |
    go run cmd/fmfm-cli/main.go "$@"

prof:
  summary: 'Run program with profiling'
  command: |
    go run cmd/fmfm-cli/*.go

prof2:
  summary: 'Run program with profiling without inlining optimization'
  command: |
    go run -gcflags '-N -l' cmd/fmfm-cli/*.go

build:
  summary: 'Build binary'
  command: |
    mkdir -p build/fmfm-module
    go build -o build/fmfm-module/fmfm.so -buildmode=c-shared cmd/fmfm-module/main.go

test:
  summary: 'Run test'
  command: |
    go test ./...

lint:
  summary: 'Check coding style'
  command: |
    gometalinter --config=.gometalinter.json ./...

fmt:
  summary: 'Format code'
  command: |
    find . -not \( \( -name vendor -or -name assets \) -prune \) -name '*.go' | xargs -I{} goimports -w {}
